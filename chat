import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Load data
df = pd.read_csv("your_data.csv")

# List of brands to include
brands = [
    'bmw', 'volkswagen', 'mercedes-benz ag', 'volvo', 'toyota', 'ford',
    'stellantis', 'nissan', 'kia', 'renault', 'byd', 'tesla', 'mazda',
    'hyundai', 'polestar', 'gm', 'jlr', 'subaru'
]

# Standardize brand names
df['Bidder_Name'] = df['Bidder_Name'].str.strip().str.lower()

# Filter by brand list
df = df[df['Bidder_Name'].isin(brands)]

# Remove rows with NaN or 0 in key numeric columns
num_cols = ['Price_USD', 'ERange_km', 'Elec_kWh_per_100km', 'Power_kW']
df = df.dropna(subset=num_cols)
for col in num_cols:
    df = df[df[col] != 0]

# Show averages of numeric parameters
avg_table = df[num_cols].mean().reset_index()
avg_table.columns = ['Parameter', 'Average']
print("\n=== Average of All Numeric Parameters ===")
print(avg_table.to_string(index=False))

# Group by brand & calculate averages
grouped = df.groupby('Bidder_Name')[num_cols].mean().reset_index()

# Normalize each metric (invert price & Elec_kWh for scoring)
grouped['Price_norm'] = (grouped['Price_USD'].max() - grouped['Price_USD']) / (grouped['Price_USD'].max() - grouped['Price_USD'].min())
grouped['Range_norm'] = (grouped['ERange_km'] - grouped['ERange_km'].min()) / (grouped['ERange_km'].max() - grouped['ERange_km'].min())
grouped['Elec_kWh_norm'] = (grouped['Elec_kWh_per_100km'].max() - grouped['Elec_kWh_per_100km']) / (grouped['Elec_kWh_per_100km'].max() - grouped['Elec_kWh_per_100km'].min())
grouped['Power_norm'] = (grouped['Power_kW'] - grouped['Power_kW'].min()) / (grouped['Power_kW'].max() - grouped['Power_kW'].min())

# Final score (equal weights)
grouped['Score'] = grouped[['Price_norm', 'Range_norm', 'Elec_kWh_norm', 'Power_norm']].mean(axis=1)

# Get Top 10 brands
top10 = grouped.sort_values('Score', ascending=False).head(10)

print("\n=== Top 10 Brands by Score ===")
print(top10[['Bidder_Name', 'Score']].to_string(index=False))

# Plot Top 10
plt.figure(figsize=(10,6))
sns.barplot(data=top10, x='Score', y='Bidder_Name', palette='viridis')
plt.title('Top 10 Brands by Score')
plt.show()
