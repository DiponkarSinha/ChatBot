import re
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# ================= CONFIG =================
CSV_PATH = "your_data.csv"

POWERTRAIN_KEEP = {'BEV', 'PHEV', 'MHEV', 'FCEVs'}
RENAME = {
    'Electric_Range_in_km': 'ERange_km',
    'Vehicle_List_Price_including_Discounts_in_USD': 'Price_USD'
}
NUMERIC_COLS = ['ERange_km', 'Price_USD']
LOWER_IS_BETTER = {'Price_USD'}  # Lower price = better score

DEBUG = True
# ===========================================

def to_number(series: pd.Series) -> pd.Series:
    """Convert strings with units/currency to float; blanks to NaN."""
    def _clean(x):
        if pd.isna(x): return pd.NA
        s = str(x).strip()
        if s in {"", "-", "—", "--", "NA", "N/A", "nan"}: return pd.NA
        s = re.sub(r"[,$£€]", "", s)
        s = re.sub(r"[a-zA-Z%()]", "", s)
        s = s.replace(" ", "")
        return s
    s = series.map(_clean)
    return pd.to_numeric(s, errors="coerce")

def minmax(s: pd.Series) -> pd.Series:
    lo, hi = s.min(), s.max()
    return (s - lo) / (hi - lo + 1e-12)

# -------- LOAD DATA --------
df = pd.read_csv(CSV_PATH)
if DEBUG: print("Original columns:", list(df.columns))

df = df.rename(columns=RENAME)
if DEBUG: print("Renamed columns:", list(df.columns))

# Filter only requested powertrains
if 'Power_Train' in df.columns:
    before = len(df)
    df = df[df['Power_Train'].isin(POWERTRAIN_KEEP)]
    if DEBUG: print(f"Powertrain filter: {before} → {len(df)} rows")

# Coerce numeric columns
for col in NUMERIC_COLS:
    if col in df.columns:
        df[col] = to_number(df[col])
    else:
        raise ValueError(f"Missing required column: {col}")

# -------- PER-BRAND AVERAGES --------
brand_avg = df.groupby('Bidder_Name', as_index=False)[NUMERIC_COLS].mean()

# Normalize + Score
for col in NUMERIC_COLS:
    ncol = f"{col}_norm"
    brand_avg[ncol] = (1 - minmax(brand_avg[col])) if col in LOWER_IS_BETTER else minmax(brand_avg[col])

brand_avg['Score'] = brand_avg[[f"{c}_norm" for c in NUMERIC_COLS]].mean(axis=1).fillna(0.0)
brand_avg['Rank'] = brand_avg['Score'].rank(ascending=False, method='min').astype(int)
brand_avg = brand_avg.sort_values(['Rank','Bidder_Name']).reset_index(drop=True)

# -------- TABLE VIEW --------
pd.set_option('display.max_columns', None)
pd.set_option('display.width', None)
print("\n=== AVG - Top 10 Brands with the Most Electric Vehicles (Long Range & Affordability) ===")
print(brand_avg.to_string(index=False))

# -------- PLOT TOP 10 --------
top10 = brand_avg.head(10)
plt.figure(figsize=(10, 6))
sns.barplot(data=top10, x='Score', y='Bidder_Name', palette='viridis')
for i, v in enumerate(top10['Score']):
    plt.text(float(v) + 0.005, i, f"{v*100:.2f}%", va='center', fontsize=10, fontweight='bold')
plt.title("Top 10 Brands: Long Range & Affordability")
plt.xlabel("Score")
plt.ylabel("Brand")
plt.tight_layout()
plt.show()
