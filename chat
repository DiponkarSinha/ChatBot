import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# --- Config ---
CSV_PATH = "your_data.csv"
BRANDS = [
    'bmw','volkswagen','mercedes-benz ag','volvo','toyota','ford','stellantis','nissan',
    'kia','renault','byd','tesla','mazda','hyundai','polestar','gm','jlr','subaru'
]
NUM_COLS = [
    'Motor_cc', 'CO2_g_per_km', 'Fuel_L_per_100km',
    'Elec_kWh_per_100km', 'Power_kW', 'Price_USD'
]

# --- Load ---
df = pd.read_csv(CSV_PATH)
df['Bidder_Name'] = df['Bidder_Name'].str.strip().str.lower()
df = df[df['Bidder_Name'].isin(BRANDS)].copy()

# --- Convert numeric columns safely ---
for col in NUM_COLS:
    df[col] = pd.to_numeric(df[col], errors='coerce')

# --- Replace unrealistic zeros with NaN ---
zero_invalid_cols = ['Motor_cc', 'Power_kW', 'Fuel_L_per_100km', 'Price_USD']
df[zero_invalid_cols] = df[zero_invalid_cols].replace(0, pd.NA)

# --- Drop rows missing in any numeric column ---
df = df.dropna(subset=NUM_COLS)

# --- Per-brand averages ---
brand_avg = df.groupby('Bidder_Name', as_index=False)[NUM_COLS].mean()

# --- Normalization function ---
def minmax(series):
    lo, hi = series.min(), series.max()
    return (series - lo) / (hi - lo + 1e-12)

# --- Normalize ---
brand_avg['Motor_norm']     =     minmax(brand_avg['Motor_cc'])               # higher better
brand_avg['CO2_norm']       = 1 - minmax(brand_avg['CO2_g_per_km'])           # lower better
brand_avg['Fuel_norm']      = 1 - minmax(brand_avg['Fuel_L_per_100km'])       # lower better
brand_avg['Elec_kWh_norm']  = 1 - minmax(brand_avg['Elec_kWh_per_100km'])     # lower better
brand_avg['Power_norm']     =     minmax(brand_avg['Power_KW'])               # higher better
brand_avg['Price_norm']     = 1 - minmax(brand_avg['Price_USD'])              # lower better

# --- Score ---
brand_avg['Score'] = brand_avg[[
    'Motor_norm','CO2_norm','Fuel_norm',
    'Elec_kWh_norm','Power_norm','Price_norm'
]].mean(axis=1)

brand_avg['Rank'] = brand_avg['Score'].rank(ascending=False).astype(int)
brand_avg = brand_avg.sort_values('Rank')

# --- Table view ---
pd.set_option('display.max_columns', None)
pd.set_option('display.width', None)
print("\n=== Full Scoring Table ===")
print(brand_avg.to_string(index=False))

# --- Plot ---
top10 = brand_avg.head(10)
plt.figure(figsize=(10,6))
sns.barplot(data=top10, x='Score', y='Bidder_Name', palette='viridis')
for i, val in enumerate(top10['Score']):
    plt.text(val + 0.005, i, f"{val*100:.2f}%", va='center', fontsize=10, fontweight='bold')
plt.title('Top 10 Brands with Highest Customer Value')
plt.xlabel('Score')
plt.ylabel('Brand')
plt.tight_layout()
plt.show()
